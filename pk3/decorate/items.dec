ACTOR ShitAll : CustomInventory
{
    States
    {
    Spawn:
        TNT1 A 1
        stop
    }
}

actor TinyMeterPickup : CustomInventory
{
    //Inventory.PickupMessage "      "
    //Inventory.PickupSound "nowayjose"
    +FLOORCLIP
    +QUIET
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("SoulFragmentDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("BatteryDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 30
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("IsJungHaeLin",1,"PickupHaeLin")
        TNT1 A 0 A_JumpIfInventory("IsSSH",1,"PickupShihong")
        TNT1 A 1
        stop
    PickupHaeLin:
        TNT1 A 0
        //TNT1 A 0 A_JumpIfInventory("SuperMeterCounter",0,"PickupFail")
        TNT1 A 0 ACS_ExecuteWithResult(275,0,8)
        TNT1 A 0 A_SetBlend("White",0.15,10)
        TNT1 A 0 A_GiveInventory("SuperMeterCounter",1)
        TNT1 A 0 A_GiveInventory("Points",10)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,5,0) // Y'know, in hindsight, this was kind of redundant.
        stop
    PickupShihong:
        TNT1 A 0
        //TNT1 A 0 A_JumpIfInventory("KiMeterCounter",0,"PickupFail")
        TNT1 A 0 ACS_ExecuteWithResult(275,0,8)
        TNT1 A 0 A_SetBlend("White",0.15,10)
        TNT1 A 0 A_GiveInventory("KiMeterCounter",10)
        TNT1 A 0 A_GiveInventory("Points",10)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,5,0) // I could've just played the sounds normally here.
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor LargeSoulGem : CustomInventory
{
    //Inventory.PickupMessage "Picked up a soul prison."
    //Inventory.PickupSound "ammo/soulgem"
    Scale 0.65
    +FLOORCLIP
    +FLOATBOB
    +QUIET
    States
    {
    Spawn:
        TNT1 A 0
        // I can do this! Since this is an offline-only item and all.
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_CLASSCHECK,0,0) == 1,"SpawnSoulGem")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_CLASSCHECK,0,0) == 2,"SpawnRawEnergy")
        TNT1 A 1
        loop
    SpawnSoulGem:
        TNT1 A 0
        TNT1 A 0 A_PlaySoundEx("ammo/soulgemloop","soundslot6",1,0)
    Spawn1:
        SLST H 57 bright
        SLST IJKLMNOPQRS 1 bright
        loop
    SpawnRawEnergy:
        TNT1 A 0
        TNT1 A 0 A_PlaySoundEx("ammo/rawenergyloop","soundslot6",1,0)
        TNT1 A 0 A_SetTranslucent(0.9,1)
    Spawn1:
        X016 ABCDEFGHIJKLMNOPQRSTUVWXY 2 BRIGHT
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("IsSSH",1,"SSHPickup")
        TNT1 A 0 A_JumpIfInventory("SuperMeterCounter",0,"PickupFail")
        TNT1 A 0 ACS_ExecuteWithResult(275,0,10)
        TNT1 A 0 A_SetBlend("White",0.75,35)
        TNT1 A 0 A_GiveInventory("SuperMeterCounter",100)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_StopSoundEx("soundslot6")
        TNT1 A 0 A_PlaySoundEx("ammo/soulgem","soundslot6",0,0)
        stop
    SSHPickup:
        TNT1 A 0 A_JumpIfInventory("KiMeterCounter",0,"PickupFail")
        TNT1 A 0 ACS_ExecuteWithResult(275,0,10)
        TNT1 A 0 A_SetBlend("White",0.75,35)
        TNT1 A 0 A_GiveInventory("KiMeterCounter",1000)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_StopSoundEx("soundslot6")
        TNT1 A 0 A_PlaySoundEx("ammo/rawenergy","soundslot6",0,0)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor SoulStoneEcho
{
    Scale 0.45
    Alpha 0.7
    Renderstyle Translucent
    +NOINTERACTION
    +CLIENTSIDEONLY
    +FORCEXYBILLBOARD
    VisibleToPlayerClass MeleePlayer
}

actor SoulStoneEcho1 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST A 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho2 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST B 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho3 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST C 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho4 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST D 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho5 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST E 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho6 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST F 1 A_FadeOut(0.2)
        loop
    }
}

actor SoulStoneEcho7 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST G 1 A_FadeOut(0.2)
        loop
    }
}

actor TinySoulKiSpawner : RandomSpawner
{
    -DROPPED 
    DropItem "TinyMeterPickup"
    DropItem "ShitAll"
    DropItem "ShitAll"
}

actor MaybeArmorBonus replaces ArmorBonus
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("TinySoulKiSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomArmorBonusSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor DoomArmorBonusSpawner : RandomSpawner { -DROPPED DropItem "DoomArmorBonus" }

actor DoomArmorBonus : CustomInventory//GreenArmor { -DROPPED }
{
    -DROPPED
    Inventory.PickupMessage "$GOTARMBONUS" // "Picked up the armor."
    States
    {
    Spawn:
        BON2 ABCDCB 6
        Loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("InIronMaiden",1,"PickupFail")
        TNT1 A 0 A_GiveInventory("ArmorBonus",1)
        stop
    PickupFail:
        TNT1 A 1
        fail
    }
}

actor SoulFragmentDisguise : RandomSpawner { DropItem "SoulFragmentDisguise2" }
actor BatteryDisguise : RandomSpawner { DropItem "BatteryDisguise2" }

actor SoulFragmentDisguise2 : CustomInventory
{
    Scale 0.5
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6","Spawn7")
        TNT1 A 1
        loop
    Spawn1:
        SLST A 1 Bright A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn2:
        SLST B 1 Bright A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn3:
        SLST C 1 Bright A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn4:
        SLST D 1 Bright A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn5:
        SLST E 1 Bright A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn6:
        SLST F 1 Bright A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Spawn7:
        SLST G 1 Bright A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",frandom(-1,1),frandom(-1,1),random(50,250)/100.00,frandom(-1,1),frandom(-1,1),frandom(-1,1),0,160,0)
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("GrossHack",1)
        //TNT1 A 0 A_JumpIfInventory("SuperMeterCounter",0,"PickupFail")
        //TNT1 A 0 A_JumpIfInventory("KiMeterCounter",0,"PickupFail")
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor BatteryDisguise2 : CustomInventory
{
    Scale 0.6
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        BTRY A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        BTRY AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("GrossHack",1)
        //TNT1 A 0 A_JumpIfInventory("SuperMeterCounter",0,"PickupFail")
        //TNT1 A 0 A_JumpIfInventory("KiMeterCounter",0,"PickupFail")
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor DoomHealthBonusSpawner : RandomSpawner { -DROPPED DropItem "DoomHealthBonus" }
actor DoomHealthBonus : HealthBonus { -DROPPED }

// If you're looking over this (my condolences), you're probably wondering why
// a randomspawner spawns a single item. See, in online play, sv_itemrespawn
// only respawns items that haven't been dropped--like, say, shotguns from the
// shotgun zombies and chainguns from the chaingun zombies. When A_SpawnItemEx
// is called to spawn an item, this treats the item as dropped, ergo it doesn't
// respawn the item after time has passed. RandomSpawners, on the other hand,
// always spawn their items and lets them respawn as normal.
// So what I'm doing with this is a workaround by having the A_SpawnItemEx call
// a randomspawner instead, which always respects sv_itemrespawn.

actor MaybeHealthBonus replaces HealthBonus
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("TinySoulKiSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomHealthBonusSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor HealPackSmall: CustomInventory //replaces StimPack
{
    Inventory.PickupMessage "Picked up 1 Life Token."
    Inventory.PickupSound "health/soda"
    Scale 0.9
    +FLOORCLIP
    -DROPPED
    States
    {
    Spawn:
        TNT1 A 1
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        fail
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverBabyPickup")
    BabyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverEasyPickup")
    EasyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNormalPickup")
    NormalFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverHardPickup")
    HardFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNightmarePickup")
    NightmareFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop

    OverBabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"BabyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    OverEasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"EasyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    OverNormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    OverHardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"HardFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    OverNightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_GiveInventory("Points",100)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor HealPackSmall1 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA A 1 BRIGHT
        SODA A 30
        loop
    PickupStop: // You'd think this would be redundant, but it's not. Inheritence is funny.
        TNT1 A 0
        stop
    }
}

actor HealPackSmall2 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA B 1 BRIGHT
        SODA B 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall3 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA C 1 BRIGHT
        SODA C 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall4 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA D 1 BRIGHT
        SODA D 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall5 : HealPackSmall
{
    YScale 0.8
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA E 1 BRIGHT
        SODA E 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall6 : HealPackSmall
{
    YScale 0.8
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA F 1 BRIGHT
        SODA F 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall7 : HealPackSmall
{
    YScale 0.8
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA G 1 BRIGHT
        SODA G 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor DoomStimpackSpawner : RandomSpawner { -DROPPED DropItem "DoomStimpack" }
actor DoomStimpack : Stimpack { -DROPPED }

actor MaybeStimpack replaces Stimpack
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("HealPackSmallSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomStimpackSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor HealPackSmallSpawner : RandomSpawner
{
    -DROPPED
    DropItem "HealPackSmall1"
    DropItem "HealPackSmall2"
    DropItem "HealPackSmall3"
    DropItem "HealPackSmall4"
    DropItem "HealPackSmall5"
    DropItem "HealPackSmall6"
    DropItem "HealPackSmall7"
}

actor HealPackMedium: CustomInventory
{
    Inventory.PickupMessage "Picked up 2 Life Tokens."
    Inventory.PickupSound "health/apple"
    Scale 0.85
    +FLOORCLIP
    -DROPPED
    States
    {
    Spawn:
        TNT1 A 1
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        fail
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverBabyPickup")
    BabyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    BabyFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverEasyPickup")
    EasyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    EasyFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNormalPickup")
    NormalFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    NormalFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverHardPickup")
    HardFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    HardFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNightmarePickup")
    NightmareFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    NightmareFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop

    OverBabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"BabyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"BabyFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverEasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"EasyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"EasyFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverHardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"HardFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"HardFailCheck2") // Just in case you get hit while picking this up.
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",250)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck2") // As above.
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    PickupStop:
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}



actor HealPackMedium1 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL A 1 BRIGHT
        APPL A 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium2 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL B 1 BRIGHT
        APPL B 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium3 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL C 1 BRIGHT
        APPL C 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium4 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL D 1 BRIGHT
        APPL D 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium5 : HealPackMedium
{
    YScale 0.775
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL E 1 BRIGHT
        APPL E 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor DoomMedikitSpawner : RandomSpawner { -DROPPED DropItem "DoomMedikit" }
actor DoomMedikit : Medikit { -DROPPED }

actor MaybeMedikit replaces Medikit
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("HealPackMediumSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomMedikitSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor HealPackMediumSpawner : RandomSpawner
{
    -DROPPED
    DropItem "HealPackMedium1"
    DropItem "HealPackMedium2"
    DropItem "HealPackMedium3"
    DropItem "HealPackMedium4"
    DropItem "HealPackMedium5"
}

actor OverHealPack : CustomInventory
{
    Inventory.PickupMessage "Picked up some Over-Life Tokens."
    Inventory.PickupSound "health/burger"
    Scale 0.75
    +INVENTORY.ALWAYSPICKUP
    +FLOORCLIP
    -DROPPED
    States
    {
    Spawn:
        TNT1 A 1
        Loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        goto OhGodHelpMePickup
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OhGodHelpMePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    PickupStop:
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        stop
    }
}

actor OverHealPack1 : OverHealPack
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        BRGR A 1 BRIGHT
        BRGR A 30
        loop
    }
}

actor OverHealPack2 : OverHealPack
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        BRGR B 1 BRIGHT
        BRGR B 30
        loop
    }
}

actor OverHealPack3 : OverHealPack
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        BRGR C 1 BRIGHT
        BRGR C 30
        loop
    }
}

actor OverHealPack4 : OverHealPack
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        BRGR D 1 BRIGHT
        BRGR D 30
        loop
    }
}

actor DoomSoulsphereSpawner : RandomSpawner { -DROPPED DropItem "DoomSoulsphere" }
actor DoomSoulsphere : Soulsphere { -DROPPED }

actor MaybeSoulsphere replaces Soulsphere
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("OverHealPackSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomSoulsphereSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor OverHealPackSpawner : RandomSpawner
{
    -DROPPED
    DropItem "OverHealPack1"
    DropItem "OverHealPack2"
    DropItem "OverHealPack3"
    DropItem "OverHealPack4"
}

actor DoomGreenArmorSpawner : RandomSpawner { -DROPPED DropItem "DoomGreenArmor" }

actor DoomGreenArmor : CustomInventory//GreenArmor { -DROPPED }
{
    -DROPPED
    Inventory.PickupMessage "$GOTARMOR" // "Picked up the armor."
    States
    {
    Spawn:
        ARM1 A 6
        ARM1 B 7 Bright
        Loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("InIronMaiden",1,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("BasicArmorBonus",100,"PickupFail")
        TNT1 A 0 A_GiveInventory("GreenArmor",1)
        stop
    PickupFail:
        TNT1 A 1
        fail
    }
}

actor MaybeGreenArmor replaces GreenArmor
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("ArmorPackSmallSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomGreenArmorSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor ArmorPackSmallSpawner : RandomSpawner { -DROPPED DropItem "ArmorPackSmall" }

actor ArmorPackSmall: CustomInventory
{
    Inventory.PickupMessage "Picked up 2 Armor Tokens."
    Inventory.PickupSound "armor/silver"
    Scale 0.9
    +FLOATBOB
    -DROPPED
    states
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOARMORCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        ARMR A 1 Bright A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"PickupNormal")
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",1,"PickupFail")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",200)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        stop
    PickupNormal:
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",2,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",1,"Pickup1")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",200)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",2)
        stop
    Pickup1:
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",200)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor DoomBlueArmorSpawner : RandomSpawner { -DROPPED DropItem "DoomBlueArmor" }

actor DoomBlueArmor : CustomInventory//BlueArmor { -DROPPED }
{
    -DROPPED
    Inventory.PickupMessage "$GOTMEGA" // "Picked up the armor."
    States
    {
    Spawn:
        ARM2 A 6
        ARM2 B 6 Bright
        Loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("InIronMaiden",1,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("BasicArmorBonus",200,"PickupFail")
        TNT1 A 0 A_GiveInventory("BlueArmor",1)
        stop
    PickupFail:
        TNT1 A 1
        fail
    }
}

actor MaybeBlueArmor replaces BlueArmor
{
    States
    {
        Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("ArmorPackLargeSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomBlueArmorSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor ArmorPackLargeSpawner : RandomSpawner { -DROPPED DropItem "ArmorPackLarge" }

actor ArmorPackLarge: CustomInventory
{
    Inventory.PickupMessage "Picked up 4 Armor Tokens."
    Inventory.PickupSound "armor/gold"
    +FLOATBOB
    -DROPPED
    states
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOARMORCHECK,0,0) == 1,"PickupStop")
    Spawn0:
        ARMR B 1 Bright A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"PickupNormal")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"PickupHard")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"PickupHard")
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        TNT1 A 0
        stop
    PickupNormal:
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",4)
        stop
    PickupHard:
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor BlindGuardianPickup : CustomInventory replaces Blursphere
{
    Inventory.PickupMessage "Picked up a Blind Guardian."
    Inventory.PickupSound "shield/pickup"
    Scale 0.75
    +FLOATBOB
    +INVENTORY.BIGPOWERUP
    states
    {
    Spawn:
        SHLD P 1 Bright A_SpawnItemEx("RedPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        SHLD PPPPP 2 A_SpawnItemEx("RedPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        SHLD PPPPP 2 A_SpawnItemEx("RedPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        SHLD PPPPP 2 A_SpawnItemEx("RedPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BlindGuardianShieldUp",1,"PickupHeal")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("BlindGuardianShieldUp",1)
        stop
    PickupHeal:
        TNT1 A 0
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("BlindGuardianShieldHeal",1)
        stop
    }
}

actor DoomMegasphereSpawner : RandomSpawner { -DROPPED DropItem "DoomMegasphere" }

actor DoomMegasphere : CustomInventory//Megasphere { -DROPPED }
{
    -DROPPED
    Inventory.PickupMessage "$GOTMSPHERE" // "MegaSphere!"
    Inventory.PickupSound "misc/p_pkup"
    States
    {
    Spawn:
        MEGA ABCD 6 Bright
        Loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("InIronMaiden",1,"PickupHealthOnly")
        TNT1 A 0 A_GiveInventory("BlueArmorForMegasphere", 1)
        TNT1 A 0 A_GiveInventory("MegasphereHealth", 1)
        stop
    PickupHealthOnly:
        TNT1 A 0 A_GiveInventory("MegasphereHealth", 1)
        stop
    }
}

actor MaybeMegasphere replaces Megasphere
{
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf( ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_DOOMHEALTH) == 1, 2 )
        TNT1 A 0 A_SpawnItemEx("ArmorHealthMegaPackSpawner",0,0,0,0,0,0,0,32)
        Stop
        TNT1 A 0 A_SpawnItemEx("DoomMegasphereSpawner",0,0,0,0,0,0,0,32)
        Stop
    }
}

actor ArmorHealthMegaPackSpawner : RandomSpawner { -DROPPED DropItem "ArmorHealthMegaPack" }

actor ArmorHealthMegaPack : CustomInventory
{
    Inventory.PickupMessage "Full recharge!"
    Inventory.PickupSound "nah"//"health/ramen"
    +INVENTORY.ALWAYSPICKUP
    +FLOORCLIP
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(WEEB_DECORATE,WEEB_DEC_NOHEALTHCHECK,0,0) == 1,"PickupStop")
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("RamenDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("PizzaDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 0
        TNT1 AAAAAA 5 A_SpawnItemEx("RamenSmoke",0,0,16,random(-150,150)/100.00,random(-150,150)/100.00,random(100,200)/100.00,random(-180,180),160)
        loop
    Pickup: // That strange sensation when you realize your health system has gotten
            // so complex that it's actually easier to do in ACS than in Decorate.
        TNT1 A 1
        TNT1 A 0 A_SetBlend("Blue",0.6,15)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("HaeLinFoodRamenComment")
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,0,0)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_MEGASPHERE,0,0)
        TNT1 A 1
        stop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor RamenDisguise : RandomSpawner { DropItem "RamenDisguise2" }
actor PizzaDisguise : RandomSpawner { DropItem "PizzaDisguise2" }

actor RamenDisguise2 : Inventory
{
    // Boy, this is a hacky workaround.
    // Okay, so the megasphere spawns these things as an appearance, right?
    // So they're pickuppable items that add nothing and do nothing, so the player
    // can pick them up alongside the original item.
    // But because they're spawned via A_SpawnItemEx, they're considered dropped.
    // Ergo, they can get crushed. So I get rid of +DROPPED and add +DONTGIB, but
    // now that they're -DROPPED they can respawn. And because Zandronum doesn't
    // support +DONTGIB on dropped items, I have to put them in a RandomSpawner
    // so they're considered properly spawned rather than dropped.
    // So I max out Inventory.RespawnTics and pray that nobody will actually stay
    // on a fucking map for two years.
    Scale 0.8
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB // Doesn't work in Zandro. But Zandronum hates DemonSteele anyway so NO BIG
             // I can't wait until it updates, though, so I can have this directly on an
             // A_SpawnItemEx'd item rather than having to RandomSpawner it first.
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        // And do a constant A_Warp so if the megasphere moves, this moves along with it.
        RAMN A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        RAMN AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor PizzaDisguise2 : Inventory
{
    XScale 0.3
    YScale 0.2
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        PIZA B 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        PIZA BBBBBB 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

ACTOR RamenSmoke
{
    Scale 0.2
    Alpha 0.5
    +RANDOMIZE
    +NOINTERACTION
    Renderstyle Add
    States
    {
    Spawn:
        SMOK ABCDEFGHIJKLMNOPQ 1 A_FadeOut(0.01)
        Stop
    }
}

actor PowerShield : CustomInventory replaces InvulnerabilitySphere
{
    Inventory.PickupMessage " "//"Picked up a Majestic Vanguard!"
    //Inventory.PickupSound "armor/invuln"
    //Powerup.Type "ShieldProtection"
    //Powerup.Duration -30
    //Powerup.Color blue2 0.10
    //Inventory.MaxAmount 0
    //Scale 0.5
    //+FLOATBOB
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.BIGPOWERUP
    +QUIET
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("HaloDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("HelmetDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 1 Bright A_SpawnItemEx("BluePowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        TNT1 AAAAA 2 A_SpawnItemEx("BluePowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        TNT1 AAAAA 2 A_SpawnItemEx("BluePowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        TNT1 AAAAA 2 A_SpawnItemEx("BluePowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("PowerShieldProtection",1)
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_SetBlend("Blue",0.25,15)
        TNT1 A 0 ACS_ExecuteWithResult(275,0,12)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,13,0)
        stop
    }
}

actor HaloDisguise : RandomSpawner { DropItem "HaloDisguise2" }
actor HelmetDisguise : RandomSpawner { DropItem "HelmetDisguise2" }

actor HaloDisguise2 : Inventory
{
    Scale 0.5
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    +FLOATBOB
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        ARMR C 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        ARMR CCCCCC 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor HelmetDisguise2 : Inventory
{
    Scale 0.75
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    +FLOATBOB
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        HLMT A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        HLMT AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

/*actor PowerBoots : PowerupGiver replaces RadSuit
{
    Inventory.PickupMessage "Picked up the Boots of Protection!"
    Inventory.PickupSound "armor/radsuit"
    Powerup.Type "IronFeet"
    Powerup.Duration -60
    Powerup.Color green 0.1
    Inventory.MaxAmount 0
    +FLOATBOB
    +INVENTORY.AUTOACTIVATE
    States
    {
    Spawn:
        RDBT A 1 Bright
        RDBT A 30
        loop
    }
}*/

actor PowerBoots : CustomInventory replaces RadSuit
{
    //Inventory.PickupMessage "      " // COCKS
    +INVENTORY.AUTOACTIVATE
    +INVENTORY.ALWAYSPICKUP
    +QUIET
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("BootsDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("CoolantDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 1
        TNT1 A -1
        stop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("SolesOfTheDamned",1)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 A_SetBlend("Green",0.5,20)
        TNT1 A 0 ACS_ExecuteWithResult(275,0,11)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,12,0)
        stop
    }
}

actor BootsDisguise : RandomSpawner { DropItem "BootsDisguise2" }
actor CoolantDisguise : RandomSpawner { DropItem "CoolantDisguise2" }

actor BootsDisguise2 : Inventory
{
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    +FLOATBOB
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        // And do a constant A_Warp so if the megasphere moves, this moves along with it.
        RDBT A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        RDBT AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor CoolantDisguise2 : Inventory
{
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        // And do a constant A_Warp so if the megasphere moves, this moves along with it.
        COOL A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        COOL AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)

        // How COOL B)
        loop
    }
}

ACTOR SilverPowerLine
{
    Speed 1
    Radius 0
    Height 0
    Alpha 0.01
    Scale 0.5
    RenderStyle Add
    +MISSILE
    +NOINTERACTION
    +CLIENTSIDEONLY
    States
    {
    Spawn:
        SPFX AAAAA 1 Bright A_FadeIn(0.1)
        SPFX AAAAA 2 Bright A_FadeOut(0.05)
        Stop
    }
}

actor GoldPowerLine : SilverPowerLine { Translation "80:111=160:167", "5:5=167:167" }
actor RedPowerLine : SilverPowerLine { Translation "80:111=168:190", "5:5=191:191" }
actor BluePowerLine : SilverPowerLine { Translation "80:111=192:207", "5:5=242:242" }

actor PowerupPickup : CustomInventory replaces Berserk
{
    Inventory.PickupMessage "Picked up an energy boost."
    Inventory.PickupSound "nah"
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("PepperDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("DoritosDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 30
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("IAmATraditionalDoomerWhoLikesNumbersOverTokens",1,"DoomPickup")
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        goto PickupFinish
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverBabyPickup")
    BabyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFinish")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        goto PickupFinish
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverEasyPickup")
    EasyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFinish")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        goto PickupFinish
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNormalPickup")
    NormalFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFinish")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        goto PickupFinish
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverHardPickup")
    HardFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFinish")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        goto PickupFinish
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNightmarePickup")
    NightmareFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFinish")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        goto PickupFinish

    OverBabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"BabyFailCheck")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    OverEasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"EasyFailCheck")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    OverNormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    OverHardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"HardFailCheck")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    OverNightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish

    DoomPickup:
        TNT1 A 0 A_GiveInventory("HealthBonus",25)
    PickupFinish:
        TNT1 A 0 A_SetBlend(Red,0.5,70)
        TNT1 A 0 A_GiveInventory("Points",500)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,WEEB_DEC_PLAYSOUND,1,0)
        TNT1 A 0 A_GiveInventory("HaeLinFoodLargeComment")
        TNT1 A 0 A_GiveInventory("HyperComboCounter",50)
        TNT1 A 0 A_GiveInventory("SuperMeterCounter",50)
        TNT1 A 0 A_GiveInventory("KiMeterCounter",500)
        stop
    }
}

actor SentinelPickup : CustomInventory replaces AllMap
{
    //Inventory.PickupMessage "     "//"Picked up an Option."
    //Inventory.PickupSound "TaxReturns"
    //Scale 0.4
    +INVENTORY.BIGPOWERUP
    +QUIET
    //+FLOATBOB
    states
    {
    Spawn:
        //SENT Z 1 Bright
        //SENT Z 30
        TNT1 A 0
        TNT1 A 1
        TNT1 A 0 A_SpawnItemEx("SentinelDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
        TNT1 A 0 A_SpawnItemEx("RavenDisguise",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION | SXF_SETMASTER,0)
    Spawn1:
        TNT1 A 30
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 ACS_ExecuteWithResult(275,0,7)
        TNT1 A 0 A_JumpIfInventory("IsJungHaeLin",1,"PickupHaeLin")
        TNT1 A 0 A_JumpIfInventory("IsSSH",1,"PickupShihong")
        TNT1 A 1
        stop
    PickupHaeLin:
        TNT1 A 0 A_JumpIfInventory("SentinelUp",1,"PickupHaeLinHeal")
        TNT1 A 0 A_SetBlend("White",0.45,10)
        TNT1 A 0 A_PlaySound("sentinel/pickup")
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("SentinelUp",1)
        stop
    PickupHaeLinHeal:
        TNT1 A 0
        TNT1 A 0 A_SetBlend("White",0.45,10)
        TNT1 A 0 A_PlaySound("sentinel/pickup")
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("SentinelDissidentAggressor",1)
        stop
    PickupShihong:
        TNT1 A 0 A_JumpIfInventory("RavenUp",1,"PickupShihongHeal")
        TNT1 A 0 A_SetBlend("White",0.45,10)
        TNT1 A 0 A_PlaySound("raven/pickup")
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("RavenUp",1)
        stop
    PickupShihongHeal:
        TNT1 A 0
        TNT1 A 0 A_SetBlend("White",0.45,10)
        TNT1 A 0 A_PlaySound("raven/pickup")
        TNT1 A 0 A_GiveInventory("Points",1000)
        TNT1 A 0 A_GiveInventory("RavenGimmeJustALittle",1)
        stop
    }
}

actor SentinelDisguise : RandomSpawner { DropItem "SentinelDisguise2" }
actor RavenDisguise : RandomSpawner { DropItem "RavenDisguise2" }

actor SentinelDisguise2 : Inventory
{
    Scale 0.4
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    +FLOATBOB
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        SENT Z 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        SENT ZZZZZZ 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor RavenDisguise2 : Inventory
{
    Scale 0.75
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    +FLOATBOB
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        RVIC ABCBA 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        RVIC AAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor SentinelPickupB : SentinelPickup replaces Infrared {}

actor FortuneCookie : CustomInventory 30242
{
    Inventory.PickupMessage "Picked up 1 Over-Life Token."
    Inventory.PickupSound "health/cookie"
    YScale 0.4
    XScale 0.5
    +FLOORCLIP
    States
    {
    Spawn:
        COOK I 1 BRIGHT
        COOK I 30
        loop
    Pickup:
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ManPoints",1)
        TNT1 A 0 ACS_ExecuteAlways(WEEB_DECORATE,0,24,0,0)
        TNT1 A 0 A_GiveInventory("HaeLinFoodSmallComment")
        TNT1 A 0 A_JumpIfInventory("IAmATraditionalDoomerWhoLikesNumbersOverTokens",1,"DoomPickup")
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        goto OhGodHelpMePickup

    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    EasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    OhGodHelpMePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"PickupFinish")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        goto PickupFinish
    DoomPickup:
        TNT1 A 0 A_GiveInventory("HealthBonus",25)
    PickupFinish:
        TNT1 A 1
        stop
    }
}

actor PepperDisguise : RandomSpawner { DropItem "PepperDisguise2" } // UUUUUUUUUUUUUGH HACK HACK HACK HACK HACK
actor DoritosDisguise : RandomSpawner { DropItem "DoritosDisguise2" } // THE THINGS I DO FOR ZANDRONUM COMPAT

actor PepperDisguise2 : Inventory
{
    XScale 0.65
    YScale 0.55
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 1
    Spawn1:
        PEPR A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        PEPR AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}

actor DoritosDisguise2 : Inventory
{
    XScale 0.6
    YScale 0.5
    Inventory.RespawnTics 0x7FFFFFFF
    -DROPPED
    +FLOORCLIP
    +QUIET
    +ALWAYSPICKUP
    -SOLID
    +DONTGIB
    -COUNTITEM
    VisibleToPlayerClass MeleePlayer2
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_Jump(255,"Spawn1","Spawn2","Spawn3")
        TNT1 A 1
        loop
    Spawn1:
        DORI A 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        DORI AAAAAA 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    Spawn2:
        DORI B 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        DORI BBBBBB 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    Spawn3:
        DORI C 1 Bright //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        DORI CCCCCC 5 //A_Warp(AAPTR_MASTER,0,0,0,0,WARPF_INTERPOLATE)
        loop
    }
}