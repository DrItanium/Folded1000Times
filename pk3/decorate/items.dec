ACTOR ShitAll : CustomInventory
{
    States
    {
    Spawn:
        TNT1 A 1
        stop
    }
}

actor TinyMeterPickup : CustomInventory
{
    Inventory.PickupMessage "Picked up a soul fragment."
    Inventory.PickupSound "ammo/soulstone"
    Scale 0.5
    +FLOORCLIP
    States
    {
    Spawn:
        TNT1 A 1
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("SuperMeterCounter",0,"PickupFail")
        TNT1 A 0 A_SetBlend("White",0.15,10)
        TNT1 A 0 A_GiveInventory("SuperMeterCounter",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor TinyMeterPickup1 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST A 1 Bright A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST AAAAA 1 A_SpawnItemEx("SoulStoneEcho1",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup2 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST B 1 Bright A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST BBBBB 1 A_SpawnItemEx("SoulStoneEcho2",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup3 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST C 1 Bright A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST CCCCC 1 A_SpawnItemEx("SoulStoneEcho3",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup4 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST D 1 Bright A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST DDDDD 1 A_SpawnItemEx("SoulStoneEcho4",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup5 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST E 1 Bright A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST EEEEE 1 A_SpawnItemEx("SoulStoneEcho5",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup6 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST F 1 Bright A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST FFFFF 1 A_SpawnItemEx("SoulStoneEcho6",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor TinyMeterPickup7 : TinyMeterPickup
{
    States
    {
    Spawn:
        SLST G 1 Bright A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        SLST GGGGG 1 A_SpawnItemEx("SoulStoneEcho7",random(-100,100)/100.00,random(-100,100)/100.00,random(50,250)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,random(-100,100)/100.00,0,160,0)
        loop
    }
}

actor SoulStoneEcho
{
    Scale 0.45
    Alpha 0.5
    Renderstyle Translucent
    +NOINTERACTION
    +CLIENTSIDEONLY
    +FORCEXYBILLBOARD
}

actor SoulStoneEcho1 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST A 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho2 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST B 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho3 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST C 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho4 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST D 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho5 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST E 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho6 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST F 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneEcho7 : SoulStoneEcho
{
    States
    {
    Spawn:
        SLST G 1 A_FadeOut(0.1)
        loop
    }
}

actor SoulStoneSpawner1 : RandomSpawner replaces ArmorBonus
{
    DropItem "TinyMeterPickup1"
    DropItem "TinyMeterPickup2"
    DropItem "TinyMeterPickup3"
    DropItem "TinyMeterPickup4"
    DropItem "TinyMeterPickup5"
    DropItem "TinyMeterPickup6"
    DropItem "TinyMeterPickup7"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
    DropItem "ShitAll"
}

actor SoulStoneSpawner2 : SoulStoneSpawner1 replaces HealthBonus {}

actor HealPackSmall: CustomInventory //replaces StimPack
{
    Inventory.PickupMessage "Picked up 1 Life Token."
    Inventory.PickupSound "health/soda"
    Scale 0.9
    +FLOORCLIP
    States
    {
    Spawn:
        TNT1 A 1
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        fail
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverBabyPickup")
    BabyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverEasyPickup")
    EasyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNormalPickup")
    NormalFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverHardPickup")
    HardFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNightmarePickup")
    NightmareFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop

    OverBabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"BabyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverEasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"EasyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverHardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"HardFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor HealPackSmall1 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA A 1 BRIGHT
        SODA A 30
        loop
    PickupStop: // You'd think this would be redundant.
        TNT1 A 0
        stop
    }
}

actor HealPackSmall2 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA B 1 BRIGHT
        SODA B 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall3 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA C 1 BRIGHT
        SODA C 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall4 : HealPackSmall
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA D 1 BRIGHT
        SODA D 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmall5 : HealPackSmall
{
    YScale 0.8
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        SODA E 1 BRIGHT
        SODA E 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackSmallSpawner : RandomSpawner replaces Stimpack
{
    DropItem "HealPackSmall1"
    DropItem "HealPackSmall2"
    DropItem "HealPackSmall3"
    DropItem "HealPackSmall4"
    DropItem "HealPackSmall5"
}

actor HealPackMedium: CustomInventory
{
    Inventory.PickupMessage "Picked up 2 Life Tokens."
    Inventory.PickupSound "health/apple"
    Scale 0.85
    +FLOORCLIP
    States
    {
    Spawn:
        TNT1 A 1
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        TNT1 A 1
        fail
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverBabyPickup")
    BabyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    BabyFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverEasyPickup")
    EasyFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    EasyFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNormalPickup")
    NormalFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    NormalFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverHardPickup")
    HardFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    HardFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"OverNightmarePickup")
    NightmareFailCheck:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
    NightmareFailCheck2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop

    OverBabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"BabyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"BabyFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverEasyPickup: // Heh.
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"EasyFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"EasyFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"NormalFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverHardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"HardFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"HardFailCheck2")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OverNightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"NightmareFailCheck2") // Just in case you get hit while picking this up.
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    PickupStop:
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}



actor HealPackMedium1 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL A 1 BRIGHT
        APPL A 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium2 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL B 1 BRIGHT
        APPL B 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium3 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL C 1 BRIGHT
        APPL C 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium4 : HealPackMedium
{
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL D 1 BRIGHT
        APPL D 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMedium5 : HealPackMedium
{
    YScale 0.775
    States
    {
    Spawn:
        TNT1 A 1
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(267,WEEB_DEC_DIFFCHECK,0,0) == 1,"PickupStop")
    Spawn2:
        APPL E 1 BRIGHT
        APPL E 30
        loop
    PickupStop:
        TNT1 A 0
        stop
    }
}

actor HealPackMediumSpawner : RandomSpawner replaces Medikit
{
    DropItem "HealPackMedium1"
    DropItem "HealPackMedium2"
    DropItem "HealPackMedium3"
    DropItem "HealPackMedium4"
    DropItem "HealPackMedium5"
}

actor OverHealPack : CustomInventory
{
    Inventory.PickupMessage "Picked up some Over-Life Tokens."
    Inventory.PickupSound "health/burger"
    Scale 0.75
    +FLOORCLIP
    States
    {
    Spawn:
        TNT1 A 1
        Loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        goto OhGodHelpMePickup
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",3,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    OhGodHelpMePickup:
        TNT1 A 0 A_JumpIfInventory("OverLifeToken",1,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("OverLifeToken",1)
        stop
    PickupStop:
        TNT1 A 0
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor OverHealPack1 : OverHealPack
{
    States
    {
    Spawn:
        BRGR A 1 BRIGHT
        BRGR A 30
        loop
    }
}

actor OverHealPack2 : OverHealPack
{
    States
    {
    Spawn:
        BRGR B 1 BRIGHT
        BRGR B 30
        loop
    }
}

actor OverHealPack3 : OverHealPack
{
    States
    {
    Spawn:
        BRGR C 1 BRIGHT
        BRGR C 30
        loop
    }
}

actor OverHealPack4 : OverHealPack
{
    States
    {
    Spawn:
        BRGR D 1 BRIGHT
        BRGR D 30
        loop
    }
}

actor OverHealPackSpawner : RandomSpawner replaces Soulsphere
{
    DropItem "OverHealPack1"
    DropItem "OverHealPack2"
    DropItem "OverHealPack3"
    DropItem "OverHealPack4"
}

actor ArmorPackSmall: CustomInventory replaces GreenArmor
{
    Inventory.PickupMessage "Picked up 2 Armor Tokens."
    Inventory.PickupSound "armor/silver"
    Scale 0.9
    +FLOATBOB
    states
    {
      Spawn:
        ARMR A 1 Bright A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR AAAAA 2 A_SpawnItemEx("SilverPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop

      Pickup:
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",2,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",1,"Pickup1")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",2)
        stop

      Pickup1:
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",1)
        stop

      PickupFail:
        TNT1 A 0
        fail
    }
}

actor ArmorPackLarge: CustomInventory replaces BlueArmor
{
    Inventory.PickupMessage "Picked up 4 Armor Tokens."
    Inventory.PickupSound "armor/gold"
    +FLOATBOB
    states
    {
      Spawn:
        ARMR B 1 Bright A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        ARMR BBBBB 2 A_SpawnItemEx("GoldPowerLine",random(1200,-1200)/100.00,random(1200,-1200)/100.00,16,0,0,2,0,160,0)
        loop

      Pickup:
        TNT1 A 0 A_JumpIfInventory("ContraArmorToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Yellow",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraArmorToken",4)
        stop

      PickupFail:
        TNT1 A 0
        fail
    }
}

actor ArmorHealthMegaPack: CustomInventory replaces Megasphere
{
    Inventory.PickupMessage "Full recharge!"
    Inventory.PickupSound "health/ramen"
    Scale 0.8
    states
    {
    Spawn:
        RAMN A 1 Bright
        RAMN AAAAAA 5 A_SpawnItemEx("RamenSmoke",0,0,16,random(-150,150)/100.00,random(-150,150)/100.00,random(100,200)/100.00,random(-180,180),160)
        Loop
    Pickup: // That strange sensation when you realize your health system has gotten
            // so complex that it's actually easier to do in ACS than in Decorate.
        //TNT1 A 0 A_JumpIfInventory("ContraArmorToken",4,"Pickup2")
        TNT1 A 1
        TNT1 A 0 A_SetBlend("Blue",0.6,15)
        TNT1 A 0 ACS_ExecuteAlways(267,0,WEEB_DEC_MEGASPHERE,0,0)
        TNT1 A 1
        stop
    /*Pickup2:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        goto Pickup3:
    
    Pickup3:
        TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"OverBabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"OverEasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"OverNormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"OverHardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"OverNightmarePickup")
      /*TNT1 A 0 A_JumpIfInventory("ContraArmorToken",5,"Pickup2")
        TNT1 A 0 A_GiveInventory("ContraArmorToken",5)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",6)
        stop
        
      Pickup2:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Blue",0.6,15)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",10)
        stop*/
        /*TNT1 A 0 A_JumpIfInventory("BabyMarker",1,"BabyPickup")
        TNT1 A 0 A_JumpIfInventory("EasyMarker",1,"EasyPickup")
        TNT1 A 0 A_JumpIfInventory("NormalMarker",1,"NormalPickup")
        TNT1 A 0 A_JumpIfInventory("HardMarker",1,"HardPickup")
        TNT1 A 0 A_JumpIfInventory("NightmareMarker",1,"NightmarePickup")
        
    BabyPickup:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",10,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
        
    EasyPickup:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",8,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
        
    NormalPickup:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",6,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
        
    HardPickup:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",4,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        stop
        
    NightmarePickup:
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupFail")
        TNT1 A 0 A_SetBlend("Green",0.45,10)
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop")
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop") // Just in case you somehow get hit while healing...
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop") // Twice...
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)
        TNT1 A 0 A_JumpIfInventory("ContraLifeToken",2,"PickupStop") // Thrice...
        TNT1 A 0 A_GiveInventory("ContraLifeToken",1)*/
        stop

      PickupFail:
        TNT1 A 0
        fail
    }
}

ACTOR RamenSmoke
{
    Scale 0.2
    Alpha 0.5
    +RANDOMIZE
    +NOINTERACTION
    Renderstyle Add
    States
    {
    Spawn:
        SMOK ABCDEFGHIJKLMNOPQ 1 A_FadeOut(0.01)
        Stop
    }
}

actor PowerShield : PowerupGiver replaces InvulnerabilitySphere
{
    Inventory.PickupMessage "Invulnerability!"
    Powerup.Type "ShieldProtection"
    Powerup.Duration -30
    Powerup.Color blue2 0.10
    +INVENTORY.AUTOACTIVATE
    States
    {
    Spawn:
        PINV ABCD 6 Bright
        Loop
    }
}

ACTOR SilverPowerLine
{
    Speed 1
    Radius 0
    Height 0
    Alpha 0.01
    Scale 0.5
    RenderStyle Add
    +MISSILE
    +NOINTERACTION
    +CLIENTSIDEONLY
    States
    {
    Spawn:
        SPFX AAAAA 1 Bright A_FadeIn(0.1)
        SPFX AAAAA 2 Bright A_FadeOut(0.05)
        Stop
    }
}

actor GoldPowerLine : SilverPowerLine { Translation "80:111=160:167", "5:5=167:167" }